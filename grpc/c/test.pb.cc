// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#include "test.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace helloworld {
PROTOBUF_CONSTEXPR C_IN::C_IN(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ca_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_INDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_INDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_INDefaultTypeInternal() {}
  union {
    C_IN _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_INDefaultTypeInternal _C_IN_default_instance_;
PROTOBUF_CONSTEXPR C_OUT::C_OUT(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.cb_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_OUTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_OUTDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_OUTDefaultTypeInternal() {}
  union {
    C_OUT _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_OUTDefaultTypeInternal _C_OUT_default_instance_;
PROTOBUF_CONSTEXPR PY_IN::PY_IN(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.pya_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PY_INDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PY_INDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PY_INDefaultTypeInternal() {}
  union {
    PY_IN _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PY_INDefaultTypeInternal _PY_IN_default_instance_;
PROTOBUF_CONSTEXPR PY_OUT::PY_OUT(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.pyb_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PY_OUTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PY_OUTDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PY_OUTDefaultTypeInternal() {}
  union {
    PY_OUT _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PY_OUTDefaultTypeInternal _PY_OUT_default_instance_;
}  // namespace helloworld
static ::_pb::Metadata file_level_metadata_test_2eproto[4];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_test_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_test_2eproto = nullptr;

const uint32_t TableStruct_test_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::helloworld::C_IN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::helloworld::C_IN, _impl_.ca_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::helloworld::C_OUT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::helloworld::C_OUT, _impl_.cb_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::helloworld::PY_IN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::helloworld::PY_IN, _impl_.pya_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::helloworld::PY_OUT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::helloworld::PY_OUT, _impl_.pyb_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::helloworld::C_IN)},
  { 7, -1, -1, sizeof(::helloworld::C_OUT)},
  { 14, -1, -1, sizeof(::helloworld::PY_IN)},
  { 21, -1, -1, sizeof(::helloworld::PY_OUT)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::helloworld::_C_IN_default_instance_._instance,
  &::helloworld::_C_OUT_default_instance_._instance,
  &::helloworld::_PY_IN_default_instance_._instance,
  &::helloworld::_PY_OUT_default_instance_._instance,
};

const char descriptor_table_protodef_test_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\ntest.proto\022\nhelloworld\"\022\n\004C_IN\022\n\n\002ca\030\001"
  " \001(\t\"\023\n\005C_OUT\022\n\n\002cb\030\001 \001(\t\"\024\n\005PY_IN\022\013\n\003py"
  "a\030\001 \001(\t\"\025\n\006PY_OUT\022\013\n\003pyb\030\001 \001(\t2@\n\005C_rpc\022"
  "7\n\016c_do_something\022\020.helloworld.C_IN\032\021.he"
  "lloworld.C_OUT\"\0002D\n\006Py_rpc\022:\n\017py_do_some"
  "thing\022\021.helloworld.PY_IN\032\022.helloworld.PY"
  "_OUT\"\000b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_test_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_test_2eproto = {
    false, false, 254, descriptor_table_protodef_test_2eproto,
    "test.proto",
    &descriptor_table_test_2eproto_once, nullptr, 0, 4,
    schemas, file_default_instances, TableStruct_test_2eproto::offsets,
    file_level_metadata_test_2eproto, file_level_enum_descriptors_test_2eproto,
    file_level_service_descriptors_test_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_test_2eproto_getter() {
  return &descriptor_table_test_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_test_2eproto(&descriptor_table_test_2eproto);
namespace helloworld {

// ===================================================================

class C_IN::_Internal {
 public:
};

C_IN::C_IN(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:helloworld.C_IN)
}
C_IN::C_IN(const C_IN& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_IN* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ca_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.ca_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ca_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ca().empty()) {
    _this->_impl_.ca_.Set(from._internal_ca(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:helloworld.C_IN)
}

inline void C_IN::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ca_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.ca_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ca_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C_IN::~C_IN() {
  // @@protoc_insertion_point(destructor:helloworld.C_IN)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_IN::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ca_.Destroy();
}

void C_IN::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_IN::Clear() {
// @@protoc_insertion_point(message_clear_start:helloworld.C_IN)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ca_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_IN::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string ca = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_ca();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "helloworld.C_IN.ca"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_IN::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:helloworld.C_IN)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string ca = 1;
  if (!this->_internal_ca().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ca().data(), static_cast<int>(this->_internal_ca().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "helloworld.C_IN.ca");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ca(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:helloworld.C_IN)
  return target;
}

size_t C_IN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:helloworld.C_IN)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ca = 1;
  if (!this->_internal_ca().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ca());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_IN::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_IN::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_IN::GetClassData() const { return &_class_data_; }


void C_IN::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_IN*>(&to_msg);
  auto& from = static_cast<const C_IN&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:helloworld.C_IN)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ca().empty()) {
    _this->_internal_set_ca(from._internal_ca());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_IN::CopyFrom(const C_IN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:helloworld.C_IN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_IN::IsInitialized() const {
  return true;
}

void C_IN::InternalSwap(C_IN* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.ca_, lhs_arena,
      &other->_impl_.ca_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata C_IN::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_test_2eproto_getter, &descriptor_table_test_2eproto_once,
      file_level_metadata_test_2eproto[0]);
}

// ===================================================================

class C_OUT::_Internal {
 public:
};

C_OUT::C_OUT(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:helloworld.C_OUT)
}
C_OUT::C_OUT(const C_OUT& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_OUT* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.cb_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.cb_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cb_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cb().empty()) {
    _this->_impl_.cb_.Set(from._internal_cb(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:helloworld.C_OUT)
}

inline void C_OUT::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.cb_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.cb_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cb_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C_OUT::~C_OUT() {
  // @@protoc_insertion_point(destructor:helloworld.C_OUT)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_OUT::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.cb_.Destroy();
}

void C_OUT::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_OUT::Clear() {
// @@protoc_insertion_point(message_clear_start:helloworld.C_OUT)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cb_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_OUT::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string cb = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_cb();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "helloworld.C_OUT.cb"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_OUT::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:helloworld.C_OUT)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string cb = 1;
  if (!this->_internal_cb().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cb().data(), static_cast<int>(this->_internal_cb().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "helloworld.C_OUT.cb");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_cb(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:helloworld.C_OUT)
  return target;
}

size_t C_OUT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:helloworld.C_OUT)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string cb = 1;
  if (!this->_internal_cb().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cb());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_OUT::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_OUT::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_OUT::GetClassData() const { return &_class_data_; }


void C_OUT::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_OUT*>(&to_msg);
  auto& from = static_cast<const C_OUT&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:helloworld.C_OUT)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_cb().empty()) {
    _this->_internal_set_cb(from._internal_cb());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_OUT::CopyFrom(const C_OUT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:helloworld.C_OUT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_OUT::IsInitialized() const {
  return true;
}

void C_OUT::InternalSwap(C_OUT* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.cb_, lhs_arena,
      &other->_impl_.cb_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata C_OUT::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_test_2eproto_getter, &descriptor_table_test_2eproto_once,
      file_level_metadata_test_2eproto[1]);
}

// ===================================================================

class PY_IN::_Internal {
 public:
};

PY_IN::PY_IN(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:helloworld.PY_IN)
}
PY_IN::PY_IN(const PY_IN& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PY_IN* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.pya_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.pya_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pya_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pya().empty()) {
    _this->_impl_.pya_.Set(from._internal_pya(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:helloworld.PY_IN)
}

inline void PY_IN::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.pya_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.pya_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pya_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PY_IN::~PY_IN() {
  // @@protoc_insertion_point(destructor:helloworld.PY_IN)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PY_IN::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.pya_.Destroy();
}

void PY_IN::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PY_IN::Clear() {
// @@protoc_insertion_point(message_clear_start:helloworld.PY_IN)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pya_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PY_IN::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string pya = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_pya();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "helloworld.PY_IN.pya"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PY_IN::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:helloworld.PY_IN)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string pya = 1;
  if (!this->_internal_pya().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pya().data(), static_cast<int>(this->_internal_pya().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "helloworld.PY_IN.pya");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_pya(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:helloworld.PY_IN)
  return target;
}

size_t PY_IN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:helloworld.PY_IN)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string pya = 1;
  if (!this->_internal_pya().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pya());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PY_IN::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PY_IN::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PY_IN::GetClassData() const { return &_class_data_; }


void PY_IN::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PY_IN*>(&to_msg);
  auto& from = static_cast<const PY_IN&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:helloworld.PY_IN)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pya().empty()) {
    _this->_internal_set_pya(from._internal_pya());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PY_IN::CopyFrom(const PY_IN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:helloworld.PY_IN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PY_IN::IsInitialized() const {
  return true;
}

void PY_IN::InternalSwap(PY_IN* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.pya_, lhs_arena,
      &other->_impl_.pya_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PY_IN::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_test_2eproto_getter, &descriptor_table_test_2eproto_once,
      file_level_metadata_test_2eproto[2]);
}

// ===================================================================

class PY_OUT::_Internal {
 public:
};

PY_OUT::PY_OUT(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:helloworld.PY_OUT)
}
PY_OUT::PY_OUT(const PY_OUT& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PY_OUT* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.pyb_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.pyb_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pyb_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pyb().empty()) {
    _this->_impl_.pyb_.Set(from._internal_pyb(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:helloworld.PY_OUT)
}

inline void PY_OUT::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.pyb_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.pyb_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pyb_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PY_OUT::~PY_OUT() {
  // @@protoc_insertion_point(destructor:helloworld.PY_OUT)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PY_OUT::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.pyb_.Destroy();
}

void PY_OUT::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PY_OUT::Clear() {
// @@protoc_insertion_point(message_clear_start:helloworld.PY_OUT)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pyb_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PY_OUT::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string pyb = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_pyb();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "helloworld.PY_OUT.pyb"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PY_OUT::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:helloworld.PY_OUT)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string pyb = 1;
  if (!this->_internal_pyb().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pyb().data(), static_cast<int>(this->_internal_pyb().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "helloworld.PY_OUT.pyb");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_pyb(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:helloworld.PY_OUT)
  return target;
}

size_t PY_OUT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:helloworld.PY_OUT)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string pyb = 1;
  if (!this->_internal_pyb().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pyb());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PY_OUT::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PY_OUT::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PY_OUT::GetClassData() const { return &_class_data_; }


void PY_OUT::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PY_OUT*>(&to_msg);
  auto& from = static_cast<const PY_OUT&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:helloworld.PY_OUT)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pyb().empty()) {
    _this->_internal_set_pyb(from._internal_pyb());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PY_OUT::CopyFrom(const PY_OUT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:helloworld.PY_OUT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PY_OUT::IsInitialized() const {
  return true;
}

void PY_OUT::InternalSwap(PY_OUT* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.pyb_, lhs_arena,
      &other->_impl_.pyb_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PY_OUT::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_test_2eproto_getter, &descriptor_table_test_2eproto_once,
      file_level_metadata_test_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace helloworld
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::helloworld::C_IN*
Arena::CreateMaybeMessage< ::helloworld::C_IN >(Arena* arena) {
  return Arena::CreateMessageInternal< ::helloworld::C_IN >(arena);
}
template<> PROTOBUF_NOINLINE ::helloworld::C_OUT*
Arena::CreateMaybeMessage< ::helloworld::C_OUT >(Arena* arena) {
  return Arena::CreateMessageInternal< ::helloworld::C_OUT >(arena);
}
template<> PROTOBUF_NOINLINE ::helloworld::PY_IN*
Arena::CreateMaybeMessage< ::helloworld::PY_IN >(Arena* arena) {
  return Arena::CreateMessageInternal< ::helloworld::PY_IN >(arena);
}
template<> PROTOBUF_NOINLINE ::helloworld::PY_OUT*
Arena::CreateMaybeMessage< ::helloworld::PY_OUT >(Arena* arena) {
  return Arena::CreateMessageInternal< ::helloworld::PY_OUT >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
